--- Hyperparameter search ---
	param_grid = {'layer_width': [6, 10], 'lr': [0.0003, 0.001, 0.003], 'l1': [0.0004, 0.003, 0.01], 'n_layer': [1, 2], 'steepness': [8, 16]}

	accs = array([1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 0.99268293, 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ,
       1.        , 1.        , 1.        , 1.        , 1.        ])
	complexities = array([63.5, 26.5, 41. , 17.5, 22. , 48.5, 54. , 14. , 82. , 21.5, 13. ,
       18.5, 31. , 35. , 22.5, 28. , 69.5, 22. , 18.5, 14. ])
	scores = array([0.3159204 , 0.76811594, 0.54232804, 1.22377622, 0.90909091,
       0.41595197, 0.39705882, 1.42857143, 0.82046156, 1.0591133 ,
       1.53846154, 1.14906832, 0.6512605 , 0.66287879, 1.03686636,
       0.71428571, 0.29324895, 0.90909091, 1.14906832, 1.42857143])
	best_idx = 10
	best_params = {'steepness': 8, 'n_layer': 1, 'lr': 0.001, 'layer_width': 10, 'l1': 0.003}

------------- RIPPER ---------------
	Accuracy: 	[1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]
	mean = 1.0
	std = 0.0

	Complexity: 	[29 28 29 29 29 28 28 29 30 30]
	mean = 28.9
	std = 0.7

	Best model acc: 1.0
	Best model comply: 28
	Best model: ['[e=1^d=1^b=1]'
'[c=1^e=1^a=1]'
'[f=1^g=1^a=1^c=1]'
'[f=1^g=1^b=1^d=1]'
'[e=1^d=1^a=1]'
'[c=1^b=1^e=1]'
'[g=1^f=1^b=1^c=1]'
'[a=1^d=1^g=1^f=1]']

------------- DRE ---------------
	Accuracy: 	[1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]
	mean = 1.0
	std = 0.0

	Complexity: 	[13 42 28 44 13 13 13 23 13 13]
	mean = 21.5
	std = 11.851160280748886

	Best model acc: 1.0
	Best model comply: 13
	Best model: Graph[
	RuleSet h9 [
	h9	:= c
	h9	:= d
]
	RuleSet h4 [
	h4	:= a
	h4	:= b
]
	RuleSet h1 [
	h1	:= !e, h1_2
	h1_2	:= !f
	h1_2	:= !g
]
	RuleSet target [
	target	:= !h1, target_2
	target_2	:= h9, h4
]
]

